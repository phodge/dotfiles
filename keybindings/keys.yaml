# prefixes:
# CTRL- CTRL Key
# ALT- META ("Alt" Key / "Command" on Mac keyboards)
# S- SHIFT
# WIN- (Context menu / "Option" on mac keyboards)
os:
  CTRL-ALT-T: __new_terminal__
  CTRL-ALT-S-T: __new_terminal_interactive__
  # TODO: DOTFILES020: install these automatically on MacOS and Ubuntu
  ALT-Return: toggle-full-screen
  WIN-Left: resize-left-half
  WIN-Right: resize-left-half
  WIN-Up: move-to-monitor-left
  WIN-Down: move-to-monitor-left
  # SHIFT+OPTION+ == resize windows?
  ALT-S-Up: NULL
  ALT-S-Down: toggle-maximized
  ALT-S-Left: NULL
  ALT-S-Right: NULL
  ALT-WIN-Left: switch-workspace-left
  ALT-WIN-Right: switch-workspace-left
  ALT-WIN-Up: show-all-workspace-windows
  ALT-WIN-Down: NULL



terminal:
  ALT-N: __new_window__

  # TODO: DOTFILES020: can we get vi-mode keys working in alacritty like we
  # have in tmux?
  # See: https://github.com/alacritty/alacritty/blob/master/docs/features.md


tmux:
  # tmux takes ownership of these two prefixes:
  # ALT-
  # ALT-SHIFT-
  prefixed:
    .: display-message "Sourcing $HOME/.tmux.conf" \; source-file $HOME/.tmux.conf
    # mark/unmark the current pane
    M: select-pane -m
    S-M: select-pane -M
    CTRL-B: last-window
    CTRL-P: previous-window
    CTRL-N: next-window
    CTRL-M: command-prompt "move-window -t '%%'"
  direct:
    # moving between panes
    # smart pane switching with awareness of vim splits
    # https://robots.thoughtbot.com/seamlessly-navigate-vim-and-tmux-splits
    ALT-H: if-shell "$is_vim" "send-keys M-h" "select-pane -L"
    ALT-J: if-shell "$is_vim" "send-keys M-j" "select-pane -D"
    ALT-K: if-shell "$is_vim" "send-keys M-k" "select-pane -U"
    ALT-L: if-shell "$is_vim" "send-keys M-l" "select-pane -R"
    # splitting panes
    ALT-S-L: split-window -h
    ALT-S-H: split-window -h \; swap-pane -U
    ALT-S-J: split-window
    ALT-S-K: split-window \; swap-pane -U
    # move between windows
    ALT-P: previous-window
    ALT-N: next-window
    # creating a new window
    ALT-S-N: command-prompt -p "New Window" "new-window -n '%1'"
    # create a new session; move between sessions
    ALT-1: switch-client -n
    # NOTE: meta-[ is not a thing you can bind, because term codes
    ALT-2: command-prompt -p "New Session,New Window" "new-session -n '%2' -s '%1'"
  copy-mode-vi:
    V: begin-selection
    Y: { special: tmux_copy_cmd }
    S-Y: { special: tmux_copy_cmd }
    CR: { special: tmux_copy_cmd }
    ESC: cancel


# TODO:
# I'd like to have the following keybidings
# - move between split panes
#   ALT+HJKL
#   - variants: vim/tmux/iTerm/GnomeTerminal
# - create new higher split panes
#   ALT+SHIFT+HJKL
#   - variants: vim/tmux/iTerm/GnomeTerminal
# - move between higher tabs (tmux windows / terminal tabs)
#   ALT+NP
# - create higher tabs (tmux windows / terminal tabs)
#   ALT+SHIFT+NP
# - new terminal window at OS level
#   CTRL+ALT+T (vanilla)
#   CTRL+ALT+OPT+T (todo.txt)
#   CTRL+ALT+SHIFT+T (interactive startup)
