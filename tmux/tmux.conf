set -g mouse on
set -g detach-on-destroy off
set -g allow-rename off
bind-key C-b last-window
bind-key C-p previous-window
bind-key C-n next-window

is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

# smart pane switching with awareness of vim splits
# (as per https://robots.thoughtbot.com/seamlessly-navigate-vim-and-tmux-split://robots.thoughtbot.com/seamlessly-navigate-vim-and-tmux-splits)
bind-key -n M-h if-shell "$is_vim" "send-keys M-h" "select-pane -L"
bind-key -n M-j if-shell "$is_vim" "send-keys M-j" "select-pane -D"
bind-key -n M-k if-shell "$is_vim" "send-keys M-k" "select-pane -U"
bind-key -n M-l if-shell "$is_vim" "send-keys M-l" "select-pane -R"
bind-key -n M-c new-session
bind-key -n M-t new-window
bind-key -n M-L split-window -h
bind-key -n M-J split-window
bind-key -n M-p previous-window
bind-key -n M-n next-window
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"

set-window-option -g mode-keys vi
set-window-option -g aggressive-resize on
set-option -g status-keys vi

unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

# escape-time is needed to stop neovim pausing for 1 second each time the ESC key is pressed
set -sg escape-time 10

# Enable true-color support for anything that knows how to use it
set -ga terminal-overrides ',screen*:Tc'
set -ga terminal-overrides ',xterm*:Tc'
 
